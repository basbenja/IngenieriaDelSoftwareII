FORK = (get->put->FORK).

PHIL = (
    sitdown->right.get->left.get
    ->eat->left.put->right.put
    ->arise->PHIL
).

BUTLER(MAX=4) = SATDOWN[0],
SATDOWN[i:0..MAX] = (
    when (i<MAX) sitdown->SATDOWN[i+1]
    |when (i>0) arise->SATDOWN[i-1]
).

||DINERS(N=3) =
    (forall [i:0..N-1]
        (phil[i]:PHIL || {phil[i].left, phil[((i-1)+N)%N].right}::FORK)
        || phil[i:0..N-1]::BUTLER(N-1)).