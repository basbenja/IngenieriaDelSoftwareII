// Amount of readers
const N = 2
// Amount of writers
const M = 2

// Values that can be written in the variable
range T = 0..10
set VarAlpha = {value.{read[T], write[T]}}

// Semaphore
// N: amount of processes that can access the resource at the same time
SEMAPHORE(N=0) = SEMA[N],
SEMA[i:0..N] = (
    // Wake up a process
    up->SEMA[i+1]
    // Resource acquired
    |when (i>0) down->SEMA[i-1]
),
SEMA[N+1] = ERROR.

// Shared resource
VAR = VAR[O],
VAR[i:T] = (
    read[i]->VAR[i]
    |write[j:T]->VAR[j]
).

||SEMVAR = (VAR || SEMAPHORE(1)).

// Writer
WRITER = (
    mutex.down->value.read[i:T]->mutex.up->WRITER
    |mutex.down->value.write[j:T]->mutex.up->WRITER
).

// Reader
READER = (mutex.down->value.read[i:T]->mutex.up->READER).

||SYSTEM = (reader:READER||writer:WRITER||mutex:SEMVAR).